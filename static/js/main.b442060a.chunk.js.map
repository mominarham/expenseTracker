{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpense.js","components/Transactions.js","components/TransactionList.js","components/TransactionAdd.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","filter","id","payload","intialState","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","children","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpense","income","expense","style","Transactions","text","className","onClick","TransactionList","TransactionAdd","useState","setText","setAmount","input","onSubmit","e","preventDefault","newTransaction","Math","floor","random","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b442060a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n           <h2> Expense tracker </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export default (state,action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions : state.transactions.filter(transactions=> transactions.id !==action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions : [action.payload, ...state.transactions]\r\n            }\r\n        default :\r\n        return state\r\n    }\r\n}","import React,{createContext,useReducer} from 'react'\r\nimport AppReducer from './AppReducer'\r\n\r\nconst intialState = {\r\n    transactions: []\r\n}\r\n\r\nexport const GlobalContext = createContext(intialState)\r\n\r\nexport const GlobalProvider = (props)=>{\r\n    const [state, dispatch] = useReducer(AppReducer,intialState)\r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload : id\r\n        }) \r\n    }\r\n\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload : transaction\r\n        }) \r\n    }\r\n\r\n    \r\n    return (\r\n        <GlobalContext.Provider value = {{transactions : state.transactions,deleteTransaction, addTransaction }} >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nfunction Balance() {\r\n    const {transactions} = useContext(GlobalContext)\r\n    const amount = transactions.map(transactions=> transactions.amount)\r\n    const total = amount.reduce((acc, item)=> (acc += item),0).toFixed(2)\r\n    return (\r\n        <div>\r\n            <h3> your Balance </h3>\r\n            <h3 > $ {total}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nfunction IncomeExpense() {\r\n    const {transactions} = useContext(GlobalContext)\r\n    const amount = transactions.map(transactions=> transactions.amount)\r\n    const income = amount\r\n                    .filter(item => item > 0)\r\n                    .reduce((acc, item)=>(acc += item),0).toFixed(2)\r\n\r\n    const expense = (amount\r\n                    .filter(item => item < 0)\r\n                    .reduce( (acc, item)=> (acc += item),0)* -1).toFixed(2)\r\n    return (\r\n        <div>\r\n            <h6> <span style= {{'color':'green'}} >Income $ {income} </span>   | <span style= {{'color':'red'}} > expense $ {expense} </span> </h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpense\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\n\r\nfunction Transactions(props) {\r\n    const {deleteTransaction} = useContext(GlobalContext)\r\n    return (\r\n        <div >\r\n            <h6>{props.text}   =  {props.amount}  | <button className='btn btn-primary'  onClick ={()=>{deleteTransaction(props.id)}} > X</button></h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transactions\r\n","import React,{useContext} from 'react'\r\n\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport Transactions from './Transactions'\r\n\r\nfunction TransactionList() {\r\n    const {transactions} = useContext(GlobalContext)\r\n    return (\r\n        <div>\r\n             <h3> History</h3>\r\n            {transactions.map(transactions=>(<Transactions key={transactions.id} id ={transactions.id}   text ={transactions.text} amount= {transactions.amount}  />   ))}\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import React,{useState,useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nfunction TransactionAdd() {\r\n    const [text,setText] = useState('')\r\n    const [amount,setAmount] = useState(0)\r\n    const {addTransaction} = useContext(GlobalContext)\r\n\r\n    const onSubmit = (e)=>{\r\n            e.preventDefault()\r\n            const newTransaction ={\r\n                id: Math.floor(Math.random() * 1000000),\r\n                text,\r\n                amount : +amount\r\n            }\r\n\r\n            addTransaction(newTransaction)\r\n            setText('')\r\n            setAmount(0)\r\n    }\r\n    let styles = {\r\n        'background':'#3d87ff',\r\n        'color':'white',\r\n        \"max-width\": '250px',\r\n        'margin': 'auto',\r\n        'border-radius': '20px',\r\n    }\r\n    let input ={\r\n            'margin-left': '60px'\r\n        // 'background':'white'\r\n    }\r\n    return (\r\n        <div style={ styles} >\r\n        <h3> Add Transactions</h3>\r\n\r\n        <form onSubmit = {onSubmit} >\r\n            <label> Record </label>\r\n            <div style={input} > <input  className='form-control w-75' type ='text' value = {text} onChange = {(e)=>setText(e.target.value)} placeholder='Enter Reason' /> </div>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <label> Amount: Enter \"-\" if it is expense </label>\r\n            <div style={input} >  <input className='form-control w-75' type ='number' value = {amount} onChange = {(e)=>setAmount(e.target.value)} placeholder='Enter Amount ' /></div>\r\n            <button className='my-4 btn btn-primary' >Add Transaction</button>\r\n        </form>\r\n            \r\n        </div>\r\n        )\r\n}\r\n\r\nexport default TransactionAdd\r\n","import './App.css';\r\nimport Header from './components/Header'\r\nimport Balance from './components/Balance'\r\nimport IncomeExpense from './components/IncomeExpense'\r\nimport TransactionList from './components/TransactionList'\r\nimport TransactionAdd from './components/TransactionAdd'\r\nimport {GlobalProvider} from './context/GlobalState'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <GlobalProvider>\r\n      <Header/>\r\n      <div className = 'mt-5' >\r\n      <Balance/>\r\n      <IncomeExpense/>\r\n      <TransactionAdd/>\r\n      <TransactionList/>\r\n      </div>\r\n    </GlobalProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}